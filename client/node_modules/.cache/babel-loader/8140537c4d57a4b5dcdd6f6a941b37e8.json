{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useCallback, useState } from \"react\"; //import {header} from \"express-validator\";\n\nexport const useHttp = () => {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const request = useCallback(async (url, method = 'GET', body = null, headers = {}) => {\n    setLoading(true);\n\n    try {\n      if (body) {\n        body = JSON.stringify(body);\n        headers['Content-type '] = 'application.json';\n      }\n\n      const responce = await fetch(url, {\n        method,\n        body,\n        headers\n      });\n      const data = await responce.json();\n\n      if (!responce.ok) {\n        throw new Error('choto ne tak ' || data.messege);\n      }\n\n      setLoading(false);\n      return data;\n    } catch (e) {\n      setLoading(false);\n      setError(e.message);\n      throw e;\n    }\n  });\n\n  const clearError = () => setError(null);\n\n  return {\n    loading,\n    request,\n    error\n  };\n};\n\n_s(useHttp, \"2exYMDBEPqw0+DIcWoc4/tEAK2M=\");","map":{"version":3,"sources":["S:/youtubenode/client/src/hooks/http.hook.js"],"names":["useCallback","useState","useHttp","loading","setLoading","error","setError","request","url","method","body","headers","JSON","stringify","responce","fetch","data","json","ok","Error","messege","e","message","clearError"],"mappings":";;AACA,SAAQA,WAAR,EAAqBC,QAArB,QAAoC,OAApC,C,CACA;;AACA,OAAO,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAEzB,QAAM,CAAEC,OAAF,EAAWC,UAAX,IAAyBH,QAAQ,CAAE,KAAF,CAAvC;AACA,QAAM,CAAEI,KAAF,EAASC,QAAT,IAAoBL,QAAQ,CAAE,IAAF,CAAlC;AAEA,QAAMM,OAAO,GAAIP,WAAW,CAAE,OAAQQ,GAAR,EAAaC,MAAM,GAAG,KAAtB,EAA6BC,IAAI,GAAG,IAApC,EAA0CC,OAAO,GAAC,EAAlD,KAAwD;AACnFP,IAAAA,UAAU,CAAC,IAAD,CAAV;;AACC,QAAI;AACD,UAAIM,IAAJ,EAAS;AACLA,QAAAA,IAAI,GAACE,IAAI,CAACC,SAAL,CAAeH,IAAf,CAAL;AACAC,QAAAA,OAAO,CAAC,eAAD,CAAP,GAA2B,kBAA3B;AACH;;AAGA,YAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAEP,GAAF,EAAM;AAACC,QAAAA,MAAD;AAAQC,QAAAA,IAAR;AAAaC,QAAAA;AAAb,OAAN,CAA5B;AACA,YAAMK,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;;AACJ,UAAI,CAACH,QAAQ,CAACI,EAAd,EAAkB;AACd,cAAM,IAAIC,KAAJ,CAAW,mBAAmBH,IAAI,CAACI,OAAnC,CAAN;AACH;;AACDhB,MAAAA,UAAU,CAAC,KAAD,CAAV;AACI,aAAOY,IAAP;AAEH,KAfD,CAeE,OAAOK,CAAP,EAAS;AACRjB,MAAAA,UAAU,CAAC,KAAD,CAAV;AACCE,MAAAA,QAAQ,CAACe,CAAC,CAACC,OAAH,CAAR;AACA,YAAMD,CAAN;AAEH;AAIJ,GA1B2B,CAA5B;;AA2BA,QAAME,UAAU,GAAG,MAAMjB,QAAQ,CAAC,IAAD,CAAjC;;AAGJ,SAAM;AAAEH,IAAAA,OAAF;AAAUI,IAAAA,OAAV;AAAkBF,IAAAA;AAAlB,GAAN;AACC,CApCM;;GAAMH,O","sourcesContent":["\r\nimport {useCallback, useState} from \"react\";\r\n//import {header} from \"express-validator\";\r\nexport const useHttp = () => {\r\n\r\n    const [ loading ,setLoading] = useState( false)\r\n    const [ error, setError]= useState (null);\r\n\r\n    const request =  useCallback (async ( url ,method = 'GET', body = null, headers={}) =>{\r\n       setLoading(true)\r\n        try {\r\n           if (body){\r\n               body=JSON.stringify(body)\r\n               headers['Content-type '] = 'application.json'\r\n           }\r\n\r\n\r\n            const responce = await fetch( url,{method,body,headers})\r\n            const data = await responce.json()\r\n        if (!responce.ok) {\r\n            throw new Error ('choto ne tak ' || data.messege)\r\n        }\r\n        setLoading(false)\r\n            return data\r\n\r\n        } catch (e){\r\n           setLoading(false)\r\n            setError(e.message)\r\n            throw e\r\n\r\n        }\r\n\r\n\r\n\r\n    })\r\n    const clearError = () => setError(null)\r\n\r\n\r\nreturn{ loading,request,error}\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}